// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package plantobelly

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ImmutableGetClaimResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetClaimResults) Claimer() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultClaimer))
}

func (s ImmutableGetClaimResults) Deposit() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultDeposit))
}

func (s ImmutableGetClaimResults) Id() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ResultId))
}

func (s ImmutableGetClaimResults) PlantId() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ResultPlantId))
}

func (s ImmutableGetClaimResults) RecordedWaterLevel() wasmtypes.ScImmutableInt32 {
	return wasmtypes.NewScImmutableInt32(s.proxy.Root(ResultRecordedWaterLevel))
}

func (s ImmutableGetClaimResults) Timestamp() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultTimestamp))
}

type MutableGetClaimResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetClaimResults) Claimer() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultClaimer))
}

func (s MutableGetClaimResults) Deposit() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultDeposit))
}

func (s MutableGetClaimResults) Id() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ResultId))
}

func (s MutableGetClaimResults) PlantId() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ResultPlantId))
}

func (s MutableGetClaimResults) RecordedWaterLevel() wasmtypes.ScMutableInt32 {
	return wasmtypes.NewScMutableInt32(s.proxy.Root(ResultRecordedWaterLevel))
}

func (s MutableGetClaimResults) Timestamp() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultTimestamp))
}

type ImmutableGetClaimsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetClaimsResults) Claims() ArrayOfImmutableHash {
	return ArrayOfImmutableHash{proxy: s.proxy.Root(ResultClaims)}
}

type MutableGetClaimsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetClaimsResults) Claims() ArrayOfMutableHash {
	return ArrayOfMutableHash{proxy: s.proxy.Root(ResultClaims)}
}

type ImmutableGetOwnerResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetOwnerResults) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultOwner))
}

type MutableGetOwnerResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetOwnerResults) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultOwner))
}

type ImmutableGetPlantResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetPlantResults) Active() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.proxy.Root(ResultActive))
}

func (s ImmutableGetPlantResults) ActiveReason() wasmtypes.ScImmutableUint32 {
	return wasmtypes.NewScImmutableUint32(s.proxy.Root(ResultActiveReason))
}

func (s ImmutableGetPlantResults) ClaimId() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ResultClaimId))
}

func (s ImmutableGetPlantResults) Claimed() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.proxy.Root(ResultClaimed))
}

func (s ImmutableGetPlantResults) Covered() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.proxy.Root(ResultCovered))
}

func (s ImmutableGetPlantResults) CurrentWater() wasmtypes.ScImmutableInt32 {
	return wasmtypes.NewScImmutableInt32(s.proxy.Root(ResultCurrentWater))
}

func (s ImmutableGetPlantResults) Description() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultDescription))
}

func (s ImmutableGetPlantResults) Funds() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultFunds))
}

func (s ImmutableGetPlantResults) Id() wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(s.proxy.Root(ResultId))
}

func (s ImmutableGetPlantResults) Lattitude() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultLattitude))
}

func (s ImmutableGetPlantResults) Longitude() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultLongitude))
}

func (s ImmutableGetPlantResults) Manufacturer() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultManufacturer))
}

func (s ImmutableGetPlantResults) Name() wasmtypes.ScImmutableString {
	return wasmtypes.NewScImmutableString(s.proxy.Root(ResultName))
}

func (s ImmutableGetPlantResults) Owner() wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(s.proxy.Root(ResultOwner))
}

func (s ImmutableGetPlantResults) Reward() wasmtypes.ScImmutableUint64 {
	return wasmtypes.NewScImmutableUint64(s.proxy.Root(ResultReward))
}

func (s ImmutableGetPlantResults) WaterTarget() wasmtypes.ScImmutableInt32 {
	return wasmtypes.NewScImmutableInt32(s.proxy.Root(ResultWaterTarget))
}

func (s ImmutableGetPlantResults) WaterThreshold() wasmtypes.ScImmutableInt32 {
	return wasmtypes.NewScImmutableInt32(s.proxy.Root(ResultWaterThreshold))
}

type MutableGetPlantResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetPlantResults) Active() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.proxy.Root(ResultActive))
}

func (s MutableGetPlantResults) ActiveReason() wasmtypes.ScMutableUint32 {
	return wasmtypes.NewScMutableUint32(s.proxy.Root(ResultActiveReason))
}

func (s MutableGetPlantResults) ClaimId() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ResultClaimId))
}

func (s MutableGetPlantResults) Claimed() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.proxy.Root(ResultClaimed))
}

func (s MutableGetPlantResults) Covered() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.proxy.Root(ResultCovered))
}

func (s MutableGetPlantResults) CurrentWater() wasmtypes.ScMutableInt32 {
	return wasmtypes.NewScMutableInt32(s.proxy.Root(ResultCurrentWater))
}

func (s MutableGetPlantResults) Description() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultDescription))
}

func (s MutableGetPlantResults) Funds() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultFunds))
}

func (s MutableGetPlantResults) Id() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(s.proxy.Root(ResultId))
}

func (s MutableGetPlantResults) Lattitude() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultLattitude))
}

func (s MutableGetPlantResults) Longitude() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultLongitude))
}

func (s MutableGetPlantResults) Manufacturer() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultManufacturer))
}

func (s MutableGetPlantResults) Name() wasmtypes.ScMutableString {
	return wasmtypes.NewScMutableString(s.proxy.Root(ResultName))
}

func (s MutableGetPlantResults) Owner() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(s.proxy.Root(ResultOwner))
}

func (s MutableGetPlantResults) Reward() wasmtypes.ScMutableUint64 {
	return wasmtypes.NewScMutableUint64(s.proxy.Root(ResultReward))
}

func (s MutableGetPlantResults) WaterTarget() wasmtypes.ScMutableInt32 {
	return wasmtypes.NewScMutableInt32(s.proxy.Root(ResultWaterTarget))
}

func (s MutableGetPlantResults) WaterThreshold() wasmtypes.ScMutableInt32 {
	return wasmtypes.NewScMutableInt32(s.proxy.Root(ResultWaterThreshold))
}

type ArrayOfImmutableAgentID struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableAgentID) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableAgentID) GetAgentID(index uint32) wasmtypes.ScImmutableAgentID {
	return wasmtypes.NewScImmutableAgentID(a.proxy.Index(index))
}

type ImmutableGetPlantOraclesResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetPlantOraclesResults) Oracles() ArrayOfImmutableAgentID {
	return ArrayOfImmutableAgentID{proxy: s.proxy.Root(ResultOracles)}
}

type ArrayOfMutableAgentID struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableAgentID) AppendAgentID() wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(a.proxy.Append())
}

func (a ArrayOfMutableAgentID) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableAgentID) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableAgentID) GetAgentID(index uint32) wasmtypes.ScMutableAgentID {
	return wasmtypes.NewScMutableAgentID(a.proxy.Index(index))
}

type MutableGetPlantOraclesResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetPlantOraclesResults) Oracles() ArrayOfMutableAgentID {
	return ArrayOfMutableAgentID{proxy: s.proxy.Root(ResultOracles)}
}

type ImmutableGetPlantsResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetPlantsResults) Plants() ArrayOfImmutableHash {
	return ArrayOfImmutableHash{proxy: s.proxy.Root(ResultPlants)}
}

type MutableGetPlantsResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetPlantsResults) Plants() ArrayOfMutableHash {
	return ArrayOfMutableHash{proxy: s.proxy.Root(ResultPlants)}
}

type ImmutableGetPlantsFromOwnerResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetPlantsFromOwnerResults) Plants() ArrayOfImmutableHash {
	return ArrayOfImmutableHash{proxy: s.proxy.Root(ResultPlants)}
}

type MutableGetPlantsFromOwnerResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetPlantsFromOwnerResults) Plants() ArrayOfMutableHash {
	return ArrayOfMutableHash{proxy: s.proxy.Root(ResultPlants)}
}

type ImmutableGetWeatherOraclesResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableGetWeatherOraclesResults) Oracles() ArrayOfImmutableAgentID {
	return ArrayOfImmutableAgentID{proxy: s.proxy.Root(ResultOracles)}
}

type MutableGetWeatherOraclesResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableGetWeatherOraclesResults) Oracles() ArrayOfMutableAgentID {
	return ArrayOfMutableAgentID{proxy: s.proxy.Root(ResultOracles)}
}

type ImmutableIsPlantOwnerResults struct {
	proxy wasmtypes.Proxy
}

func (s ImmutableIsPlantOwnerResults) IsOwner() wasmtypes.ScImmutableBool {
	return wasmtypes.NewScImmutableBool(s.proxy.Root(ResultIsOwner))
}

type MutableIsPlantOwnerResults struct {
	proxy wasmtypes.Proxy
}

func (s MutableIsPlantOwnerResults) IsOwner() wasmtypes.ScMutableBool {
	return wasmtypes.NewScMutableBool(s.proxy.Root(ResultIsOwner))
}

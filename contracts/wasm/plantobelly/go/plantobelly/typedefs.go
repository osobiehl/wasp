// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package plantobelly

import "github.com/iotaledger/wasp/packages/wasmvm/wasmlib/go/wasmlib/wasmtypes"

type ArrayOfImmutableHash struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutableHash) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutableHash) GetHash(index uint32) wasmtypes.ScImmutableHash {
	return wasmtypes.NewScImmutableHash(a.proxy.Index(index))
}

type ImmutableIds = ArrayOfImmutableHash

type ArrayOfMutableHash struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutableHash) AppendHash() wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(a.proxy.Append())
}

func (a ArrayOfMutableHash) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutableHash) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutableHash) GetHash(index uint32) wasmtypes.ScMutableHash {
	return wasmtypes.NewScMutableHash(a.proxy.Index(index))
}

type MutableIds = ArrayOfMutableHash

type ArrayOfImmutablePlant struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfImmutablePlant) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfImmutablePlant) GetPlant(index uint32) ImmutablePlant {
	return ImmutablePlant{proxy: a.proxy.Index(index)}
}

type ImmutablePlants = ArrayOfImmutablePlant

type ArrayOfMutablePlant struct {
	proxy wasmtypes.Proxy
}

func (a ArrayOfMutablePlant) AppendPlant() MutablePlant {
	return MutablePlant{proxy: a.proxy.Append()}
}

func (a ArrayOfMutablePlant) Clear() {
	a.proxy.ClearArray()
}

func (a ArrayOfMutablePlant) Length() uint32 {
	return a.proxy.Length()
}

func (a ArrayOfMutablePlant) GetPlant(index uint32) MutablePlant {
	return MutablePlant{proxy: a.proxy.Index(index)}
}

type MutablePlants = ArrayOfMutablePlant

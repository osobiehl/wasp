// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";
import * as wasmtypes from "wasmlib/wasmtypes";

export class plantobellyEvents {

	claim(claimer: wasmtypes.ScAgentID, id: wasmtypes.ScHash, plantId: wasmtypes.ScHash): void {
		const evt = new wasmlib.EventEncoder("plantobelly.claim");
		evt.encode(wasmtypes.agentIDToString(claimer));
		evt.encode(wasmtypes.hashToString(id));
		evt.encode(wasmtypes.hashToString(plantId));
		evt.emit();
	}

	mint(balance: u64, owner: wasmtypes.ScAgentID, tokenId: wasmtypes.ScHash): void {
		const evt = new wasmlib.EventEncoder("plantobelly.mint");
		evt.encode(wasmtypes.uint64ToString(balance));
		evt.encode(wasmtypes.agentIDToString(owner));
		evt.encode(wasmtypes.hashToString(tokenId));
		evt.emit();
	}

	resolution(claimer: wasmtypes.ScAgentID, plantId: wasmtypes.ScHash, result: u32, reward: u64): void {
		const evt = new wasmlib.EventEncoder("plantobelly.resolution");
		evt.encode(wasmtypes.agentIDToString(claimer));
		evt.encode(wasmtypes.hashToString(plantId));
		evt.encode(wasmtypes.uint32ToString(result));
		evt.encode(wasmtypes.uint64ToString(reward));
		evt.emit();
	}
}

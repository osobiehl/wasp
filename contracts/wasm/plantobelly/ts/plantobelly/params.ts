// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmtypes from "wasmlib/wasmtypes";
import * as sc from "./index";

export class ImmutableActivatePlantOwnerParams extends wasmtypes.ScProxy {
	newState(): wasmtypes.ScImmutableBool {
		return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ParamNewState));
	}

	plantId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamPlantId));
	}
}

export class MutableActivatePlantOwnerParams extends wasmtypes.ScProxy {
	newState(): wasmtypes.ScMutableBool {
		return new wasmtypes.ScMutableBool(this.proxy.root(sc.ParamNewState));
	}

	plantId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamPlantId));
	}
}

export class ImmutableAddPlantFundsParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamPlantId));
	}

	value(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.ParamValue));
	}
}

export class MutableAddPlantFundsParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamPlantId));
	}

	value(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.ParamValue));
	}
}

export class ImmutableAddPlantOracleParams extends wasmtypes.ScProxy {
	oracleId(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOracleId));
	}
}

export class MutableAddPlantOracleParams extends wasmtypes.ScProxy {
	oracleId(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOracleId));
	}
}

export class ImmutableAddWeatherOracleParams extends wasmtypes.ScProxy {
	oracleId(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOracleId));
	}
}

export class MutableAddWeatherOracleParams extends wasmtypes.ScProxy {
	oracleId(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOracleId));
	}
}

export class ImmutableClaimWateringParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamPlantId));
	}

	timestamp(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.ParamTimestamp));
	}
}

export class MutableClaimWateringParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamPlantId));
	}

	timestamp(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.ParamTimestamp));
	}
}

export class ImmutableEditOwnPlantParams extends wasmtypes.ScProxy {
	covered(): wasmtypes.ScImmutableBool {
		return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ParamCovered));
	}

	description(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamDescription));
	}

	location(): sc.ImmutableGeolocation {
		return new sc.ImmutableGeolocation(this.proxy.root(sc.ParamLocation));
	}

	name(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamName));
	}

	reward(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.ParamReward));
	}

	waterTarget(): wasmtypes.ScImmutableInt32 {
		return new wasmtypes.ScImmutableInt32(this.proxy.root(sc.ParamWaterTarget));
	}
}

export class MutableEditOwnPlantParams extends wasmtypes.ScProxy {
	covered(): wasmtypes.ScMutableBool {
		return new wasmtypes.ScMutableBool(this.proxy.root(sc.ParamCovered));
	}

	description(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamDescription));
	}

	location(): sc.MutableGeolocation {
		return new sc.MutableGeolocation(this.proxy.root(sc.ParamLocation));
	}

	name(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamName));
	}

	reward(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.ParamReward));
	}

	waterTarget(): wasmtypes.ScMutableInt32 {
		return new wasmtypes.ScMutableInt32(this.proxy.root(sc.ParamWaterTarget));
	}
}

export class ImmutableInitParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class MutableInitParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class ImmutableInterruptWeatherEventParams extends wasmtypes.ScProxy {
	duration(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.ParamDuration));
	}

	plantId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamPlantId));
	}
}

export class MutableInterruptWeatherEventParams extends wasmtypes.ScProxy {
	duration(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.ParamDuration));
	}

	plantId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamPlantId));
	}
}

export class ImmutableMintPlantParams extends wasmtypes.ScProxy {
	newPlant(): sc.ImmutablePlant {
		return new sc.ImmutablePlant(this.proxy.root(sc.ParamNewPlant));
	}
}

export class MutableMintPlantParams extends wasmtypes.ScProxy {
	newPlant(): sc.MutablePlant {
		return new sc.MutablePlant(this.proxy.root(sc.ParamNewPlant));
	}
}

export class ImmutableMintPlantRawParams extends wasmtypes.ScProxy {
	active(): wasmtypes.ScImmutableBool {
		return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ParamActive));
	}

	activeReason(): wasmtypes.ScImmutableUint32 {
		return new wasmtypes.ScImmutableUint32(this.proxy.root(sc.ParamActiveReason));
	}

	claimed(): wasmtypes.ScImmutableBool {
		return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ParamClaimed));
	}

	covered(): wasmtypes.ScImmutableBool {
		return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ParamCovered));
	}

	currentWater(): wasmtypes.ScImmutableInt32 {
		return new wasmtypes.ScImmutableInt32(this.proxy.root(sc.ParamCurrentWater));
	}

	description(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamDescription));
	}

	funds(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.ParamFunds));
	}

	id(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamId));
	}

	lattitude(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamLattitude));
	}

	longitude(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamLongitude));
	}

	manufacturer(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamManufacturer));
	}

	mintClaimId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamMintClaimId));
	}

	name(): wasmtypes.ScImmutableString {
		return new wasmtypes.ScImmutableString(this.proxy.root(sc.ParamName));
	}

	owner(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOwner));
	}

	payReward(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.ParamPayReward));
	}

	waterTarget(): wasmtypes.ScImmutableInt32 {
		return new wasmtypes.ScImmutableInt32(this.proxy.root(sc.ParamWaterTarget));
	}

	waterThreshold(): wasmtypes.ScImmutableInt32 {
		return new wasmtypes.ScImmutableInt32(this.proxy.root(sc.ParamWaterThreshold));
	}
}

export class MutableMintPlantRawParams extends wasmtypes.ScProxy {
	active(): wasmtypes.ScMutableBool {
		return new wasmtypes.ScMutableBool(this.proxy.root(sc.ParamActive));
	}

	activeReason(): wasmtypes.ScMutableUint32 {
		return new wasmtypes.ScMutableUint32(this.proxy.root(sc.ParamActiveReason));
	}

	claimed(): wasmtypes.ScMutableBool {
		return new wasmtypes.ScMutableBool(this.proxy.root(sc.ParamClaimed));
	}

	covered(): wasmtypes.ScMutableBool {
		return new wasmtypes.ScMutableBool(this.proxy.root(sc.ParamCovered));
	}

	currentWater(): wasmtypes.ScMutableInt32 {
		return new wasmtypes.ScMutableInt32(this.proxy.root(sc.ParamCurrentWater));
	}

	description(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamDescription));
	}

	funds(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.ParamFunds));
	}

	id(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamId));
	}

	lattitude(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamLattitude));
	}

	longitude(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamLongitude));
	}

	manufacturer(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamManufacturer));
	}

	mintClaimId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamMintClaimId));
	}

	name(): wasmtypes.ScMutableString {
		return new wasmtypes.ScMutableString(this.proxy.root(sc.ParamName));
	}

	owner(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOwner));
	}

	payReward(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.ParamPayReward));
	}

	waterTarget(): wasmtypes.ScMutableInt32 {
		return new wasmtypes.ScMutableInt32(this.proxy.root(sc.ParamWaterTarget));
	}

	waterThreshold(): wasmtypes.ScMutableInt32 {
		return new wasmtypes.ScMutableInt32(this.proxy.root(sc.ParamWaterThreshold));
	}
}

export class ImmutablePayClaimerParams extends wasmtypes.ScProxy {
	amount(): wasmtypes.ScImmutableUint64 {
		return new wasmtypes.ScImmutableUint64(this.proxy.root(sc.ParamAmount));
	}

	to(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamTo));
	}
}

export class MutablePayClaimerParams extends wasmtypes.ScProxy {
	amount(): wasmtypes.ScMutableUint64 {
		return new wasmtypes.ScMutableUint64(this.proxy.root(sc.ParamAmount));
	}

	to(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamTo));
	}
}

export class ImmutableResolveClaimParams extends wasmtypes.ScProxy {
	id(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamId));
	}
}

export class MutableResolveClaimParams extends wasmtypes.ScProxy {
	id(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamId));
	}
}

export class ImmutableSetOwnerParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class MutableSetOwnerParams extends wasmtypes.ScProxy {
	owner(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOwner));
	}
}

export class ImmutableSetPlantWaterParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamPlantId));
	}

	waterLevel(): wasmtypes.ScImmutableInt32 {
		return new wasmtypes.ScImmutableInt32(this.proxy.root(sc.ParamWaterLevel));
	}
}

export class MutableSetPlantWaterParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamPlantId));
	}

	waterLevel(): wasmtypes.ScMutableInt32 {
		return new wasmtypes.ScMutableInt32(this.proxy.root(sc.ParamWaterLevel));
	}
}

export class ImmutableSetPlantWeatherTimeoutParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamPlantId));
	}

	timeoutDuration(): wasmtypes.ScImmutableBool {
		return new wasmtypes.ScImmutableBool(this.proxy.root(sc.ParamTimeoutDuration));
	}
}

export class MutableSetPlantWeatherTimeoutParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamPlantId));
	}

	timeoutDuration(): wasmtypes.ScMutableBool {
		return new wasmtypes.ScMutableBool(this.proxy.root(sc.ParamTimeoutDuration));
	}
}

export class ImmutableGetClaimParams extends wasmtypes.ScProxy {
	reqClaimId(): sc.ImmutableClaim {
		return new sc.ImmutableClaim(this.proxy.root(sc.ParamReqClaimId));
	}
}

export class MutableGetClaimParams extends wasmtypes.ScProxy {
	reqClaimId(): sc.MutableClaim {
		return new sc.MutableClaim(this.proxy.root(sc.ParamReqClaimId));
	}
}

export class ImmutableGetPlantParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScImmutableHash {
		return new wasmtypes.ScImmutableHash(this.proxy.root(sc.ParamPlantId));
	}
}

export class MutableGetPlantParams extends wasmtypes.ScProxy {
	plantId(): wasmtypes.ScMutableHash {
		return new wasmtypes.ScMutableHash(this.proxy.root(sc.ParamPlantId));
	}
}

export class ImmutableGetPlantsFromOwnerParams extends wasmtypes.ScProxy {
	ownerId(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamOwnerId));
	}
}

export class MutableGetPlantsFromOwnerParams extends wasmtypes.ScProxy {
	ownerId(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamOwnerId));
	}
}

export class ImmutableIsPlantOwnerParams extends wasmtypes.ScProxy {
	reqOwnerId(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamReqOwnerId));
	}

	reqPlantId(): wasmtypes.ScImmutableAgentID {
		return new wasmtypes.ScImmutableAgentID(this.proxy.root(sc.ParamReqPlantId));
	}
}

export class MutableIsPlantOwnerParams extends wasmtypes.ScProxy {
	reqOwnerId(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamReqOwnerId));
	}

	reqPlantId(): wasmtypes.ScMutableAgentID {
		return new wasmtypes.ScMutableAgentID(this.proxy.root(sc.ParamReqPlantId));
	}
}
